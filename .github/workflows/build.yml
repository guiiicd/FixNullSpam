# Nome do Workflow que aparecerá na aba "Actions" do GitHub
name: Build and Release FixNullSpam

# Gatilhos: Este workflow será executado automaticamente quando houver um push na branch 'main'
# ou pode ser iniciado manualmente (workflow_dispatch).
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    # Permissões necessárias para que a Action possa criar uma Release no repositório.
    permissions:
      contents: write
    name: Build and Release
    # O workflow será executado em uma máquina virtual Ubuntu (padrão do GitHub).
    runs-on: ubuntu-latest
    steps:
      # 1. Faz o checkout do código do seu repositório para a máquina virtual.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Configura o ambiente .NET.
      # Seu FixNullSpam.csproj usa net8.0, então usamos '8.0'.
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'

      # 3. Extrai a versão do plugin diretamente do arquivo FixNullSpam.cs.
      - name: Get Plugin Version
        id: PLUGIN_VERSION
        run: |
          # Busca a versão no arquivo principal do seu plugin
          PLUGIN_VERSION=$(grep -oP 'ModuleVersion\s*=>\s*"\K[^"]*' FixNullSpam/FixNullSpam.cs)
          echo "PLUGIN_VERSION=$PLUGIN_VERSION" >> $GITHUB_ENV
          echo "Versão detectada: $PLUGIN_VERSION"

      # 4. Compila o projeto em modo Release.
      # O caminho do projeto foi atualizado para FixNullSpam/FixNullSpam.csproj
      - name: Build Plugin
        run: dotnet publish ./FixNullSpam/FixNullSpam.csproj --configuration Release --output ./release/addons/counterstrikesharp/plugins/FixNullSpam

      # 5. Copia os arquivos extras (gamedata).
      # Seu plugin precisa do arquivo FixNullSpam.json
      - name: Copy Gamedata
        run: |
          mkdir -p ./release/gamedata
          cp ./gamedata/FixNullSpam.json ./release/gamedata/FixNullSpam.json

      # 6. Prepara e empacota os arquivos para a Release.
      - name: Package Release Files
        run: |
          # Entra no diretório de release para criar o zip com a estrutura de pastas correta (addons/ e gamedata/).
          cd release
          zip -r ../FixNullSpam-${{ env.PLUGIN_VERSION }}.zip .

      # 7. Cria a Release no GitHub.
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # O nome da Release será, por exemplo, "FixNullSpam v1.0.0.3"
          name: FixNullSpam ${{ env.PLUGIN_VERSION }}
          # A tag será a própria versão, ex: "v1.0.0.3"
          tag_name: ${{ env.PLUGIN_VERSION }}
          # Corpo/descrição da Release.
          body: |
            Release automática do plugin FixNullSpam.
            
            ### Instalação
            1. Baixe o arquivo `FixNullSpam-${{ env.PLUGIN_VERSION }}.zip`.
            2. Extraia o conteúdo na pasta `csgo/` do seu servidor.
            3. Reinicie o servidor ou carregue o plugin manualmente.
          # Define que não é um rascunho (draft) nem um pré-lançamento (prerelease).
          draft: false
          prerelease: false
          # Anexa o arquivo .zip que foi criado no passo anterior.
          files: |
            FixNullSpam-${{ env.PLUGIN_VERSION }}.zip
